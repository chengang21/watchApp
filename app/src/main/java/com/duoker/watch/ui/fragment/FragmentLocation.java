package com.duoker.watch.ui.fragment;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.Toast;

import com.amap.api.fence.GeoFence;
import com.amap.api.fence.GeoFenceClient;
import com.amap.api.fence.GeoFenceListener;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.DPoint;
import com.amap.api.maps.AMap;
import com.amap.api.maps.CameraUpdateFactory;
import com.amap.api.maps.MapView;
import com.amap.api.maps.model.BitmapDescriptor;
import com.amap.api.maps.model.BitmapDescriptorFactory;
import com.amap.api.maps.model.CircleOptions;
import com.amap.api.maps.model.LatLng;
import com.amap.api.maps.model.LatLngBounds;
import com.amap.api.maps.model.Marker;
import com.amap.api.maps.model.MarkerOptions;
import com.amap.api.maps.model.MyLocationStyle;
import com.amap.api.maps.model.PolygonOptions;
import com.amap.api.maps.model.Polyline;
import com.amap.api.maps.model.PolylineOptions;
import com.amap.api.trace.LBSTraceClient;
import com.amap.api.trace.TraceListener;
import com.amap.api.trace.TraceLocation;
import com.duoker.watch.R;
import com.duoker.watch.db.PathRecord;
import com.duoker.watch.ui.amaputil.Const;
import com.duoker.watch.ui.amaputil.TraceRePlay;
import com.duoker.watch.ui.amaputil.Util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.ExecutorService;

public class FragmentLocation extends Fragment implements AMap.OnMapLoadedListener,
        TraceListener,
        OnClickListener,
        GeoFenceListener,
        AMap.OnMapClickListener
{
    private final static int AMAP_LOADED = 2;
    private View view;
    private MapView mMapView = null;
    private AMap mAMap = null;

    private Marker mOriginStartMarker, mOriginEndMarker, mOriginRoleMarker;
    private Marker mGraspStartMarker, mGraspEndMarker, mGraspRoleMarker;
    private Polyline mOriginPolyline, mGraspPolyline;

    private RadioButton mOriginRadioButton, mGraspRadioButton;

    private int mRecordItemId;
    private List<LatLng> mOriginLatLngList;
    private List<LatLng> mGraspLatLngList;
    private boolean mGraspChecked = false;
    private boolean mOriginChecked = true;
    private ExecutorService mThreadPool;
    private TraceRePlay mRePlay;

    // 多边形围栏的边界点
    private List<LatLng> polygonPoints = new ArrayList<LatLng>();
    private List<Marker> markerList = new ArrayList<Marker>();

    // 当前的坐标点集合，主要用于进行地图的可视区域的缩放
    private LatLngBounds.Builder boundsBuilder = new LatLngBounds.Builder();

    private Button btAddFence;

    private BitmapDescriptor bitmap = null;
    private MarkerOptions markerOption = null;

    // 记录已经添加成功的围栏
    private HashMap<String, GeoFence> fenceMap = new HashMap<String, GeoFence>();

    // 地理围栏客户端
    private GeoFenceClient fenceClient = null;
    // 触发地理围栏的行为，默认为进入提醒
    private int activatesAction = GeoFenceClient.GEOFENCE_IN;
    // 地理围栏的广播action
    private static final String GEOFENCE_BROADCAST_ACTION = "com.example.geofence.polygon";

    Bundle savedInstanceState;
    Activity activity = null;

    public void setSavedInstanceState ( Bundle savedState )
    {
        savedInstanceState = savedState;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        view = inflater.inflate(R.layout.fragement_location, container, false);

        activity = this.getActivity();

        btAddFence = (Button) view.findViewById(R.id.bt_addFence);
        btAddFence.setOnClickListener(this);

        // 初始化地理围栏
        fenceClient = new GeoFenceClient( this.getActivity().getApplicationContext());

        bitmap = BitmapDescriptorFactory
                .defaultMarker(BitmapDescriptorFactory.HUE_YELLOW);
        markerOption = new MarkerOptions().icon(bitmap).draggable(true);
        /**
         * 创建pendingIntent
         */
        fenceClient.createPendingIntent(GEOFENCE_BROADCAST_ACTION);
        fenceClient.setGeoFenceListener( this );
        /**
         * 设置地理围栏的触发行为,默认为进入
         */
        fenceClient.setActivateAction(GeoFenceClient.GEOFENCE_IN);

        mGraspRadioButton = (RadioButton) view.findViewById(R.id.record_show_activity_grasp_radio_button);
        mOriginRadioButton = (RadioButton) view.findViewById(R.id.record_show_activity_origin_radio_button);
        mOriginRadioButton.setOnClickListener(this);
        mGraspRadioButton.setOnClickListener(this);
//        Intent recordIntent = activity.getIntent();
//        int threadPoolSize = Runtime.getRuntime().availableProcessors() * 2 + 3;
//        mThreadPool = Executors.newFixedThreadPool(threadPoolSize);
//        if (recordIntent != null) {
//            mRecordItemId = 1;
//        }

        initMapView ( savedInstanceState );

        IntentFilter fliter = new IntentFilter(
                ConnectivityManager.CONNECTIVITY_ACTION);
        fliter.addAction(GEOFENCE_BROADCAST_ACTION);

        getActivity().registerReceiver( mGeoFenceReceiver, fliter);
        /**
         * 创建pendingIntent
         */
        fenceClient.createPendingIntent(GEOFENCE_BROADCAST_ACTION);
        fenceClient.setGeoFenceListener(this);
        /**
         * 设置地理围栏的触发行为,默认为进入
         */
        fenceClient.setActivateAction(GeoFenceClient.GEOFENCE_IN);

        resetView_polygon();

        return view;
    }

    public void initMapView( Bundle savedState )
    {
        //获取地图控件引用
        mMapView = (MapView) view.findViewById(R.id.map_view);
        //在activity执行onCreate时执行mMapView.onCreate(savedInstanceState)，实现地图生命周期管理
        mMapView.onCreate(savedState);
        // 注意：一定要有mMapView.onCreate(savedInstanceState);// 此方法须覆写，虚拟机需要在很多情况下保存地图绘制的当前状态。

        //初始化地图控制器对象
        if(mAMap == null ) {
            mAMap = mMapView.getMap();
            mAMap.setOnMapLoadedListener(this);
        }

        mAMap.moveCamera( CameraUpdateFactory.newLatLngZoom( new LatLng(31.230689, 121.55723 ), 16 ) );

        mAMap.setOnMapClickListener(this);

        // mAMap.setLocationSource(this);// 设置定位监听
        mAMap.getUiSettings().setMyLocationButtonEnabled(true);// 设置默认定位按钮是否显示
        MyLocationStyle myLocationStyle = new MyLocationStyle();
        // 自定义定位蓝点图标
        myLocationStyle.myLocationIcon(
                BitmapDescriptorFactory.fromResource(R.drawable.gps_point));
        // 自定义精度范围的圆形边框颜色
        myLocationStyle.strokeColor(Color.argb(0, 0, 0, 0));
        // 自定义精度范围的圆形边框宽度
        myLocationStyle.strokeWidth(0);
        // 设置圆形的填充颜色
        myLocationStyle.radiusFillColor(Color.argb(0, 0, 0, 0));
        // 将自定义的 myLocationStyle 对象添加到地图上
        mAMap.setMyLocationStyle(myLocationStyle);
        mAMap.setMyLocationEnabled(true);// 设置为true表示显示定位层并可触发定位，false表示隐藏定位层并不可触发定位，默认是false
        // 设置定位的类型为定位模式 ，可以由定位、跟随或地图根据面向方向旋转几种
        mAMap.setMyLocationType(AMap.LOCATION_TYPE_LOCATE);
    }


    @Override
    public void onDestroy() {
        super.onDestroy();

        //在activity执行onDestroy时执行mMapView.onDestroy()，实现地图生命周期管理
        mMapView.onDestroy();

        if (mThreadPool != null) {
            mThreadPool.shutdownNow();
        }
    }

    @Override
    public void onResume() {
        super.onResume();
        //在activity执行onResume时执行mMapView.onResume ()，实现地图生命周期管理
        mMapView.onResume();
    }
    @Override
    public void onPause() {
        super.onPause();
        //在activity执行onPause时执行mMapView.onPause ()，实现地图生命周期管理
        mMapView.onPause();
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        //在activity执行onSaveInstanceState时执行mMapView.onSaveInstanceState (outState)，保存地图当前的状态
        mMapView.onSaveInstanceState(outState);
    }

    @Override
    public void onClick(View v) {
        int id = v.getId();
        switch (id) {
            case R.id.record_show_activity_grasp_radio_button:
                mGraspChecked = true;
                mOriginChecked = false;
                mGraspRadioButton.setChecked(true);
                mOriginRadioButton.setChecked(false);
                setGraspEnable(true);
                setOriginEnable(false);
                resetGraspRole();
                break;
            case R.id.record_show_activity_origin_radio_button:
                mOriginChecked = true;
                mGraspChecked = false;
                mGraspRadioButton.setChecked(false);
                mOriginRadioButton.setChecked(true);
                setGraspEnable(false);
                setOriginEnable(true);
                resetOriginRole();
                break;

            case R.id.bt_addFence :
                addPolygonFence();
                break;
        }
    }

    @Override
    public void onMapLoaded() {
        Message msg = handler.obtainMessage();
        msg.what = AMAP_LOADED;
        handler.sendMessage(msg);
    }

    @Override
    public void onRequestFailed(int i, String s) {
        Toast.makeText(activity.getApplicationContext(), "轨迹纠偏失败:" + s,
                Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onTraceProcessing(int i, int i1, List<LatLng> list) {

    }

    /**
     * 轨迹纠偏完成数据回调
     */
    @Override
    public void onFinished(int arg0, List<LatLng> list, int arg2, int arg3) {
        addGraspTrace(list, mGraspChecked);
        mGraspLatLngList = list;
    }

    private void startMove() {
        if(mRePlay !=null){
            mRePlay.stopTrace();
        }
        if (mOriginChecked) {
            mRePlay = rePlayTrace(mOriginLatLngList, mOriginRoleMarker);
        } else if (mGraspChecked) {
            mRePlay = rePlayTrace(mGraspLatLngList, mGraspRoleMarker);
        }
    }

    /**
     * 轨迹回放方法
     */
    private TraceRePlay rePlayTrace(List<LatLng> list, final Marker updateMarker) {
        TraceRePlay replay = new TraceRePlay(list, 100,
                new TraceRePlay.TraceRePlayListener() {

                    @Override
                    public void onTraceUpdating(LatLng latLng) {
                        if (updateMarker != null) {
                            updateMarker.setPosition(latLng); // 更新小人实现轨迹回放
                        }
                    }

                    @Override
                    public void onTraceUpdateFinish() {
                        // mDisplaybtn.setChecked(false);
                        // mDisplaybtn.setClickable(true);
                    }
                });
        mThreadPool.execute(replay);
        return replay;
    }

    /**
     * 将纠偏后轨迹小人设置到起点
     */
    private void resetGraspRole() {
        if (mGraspLatLngList == null) {
            return;
        }
        LatLng startLatLng = mGraspLatLngList.get(0);
        if (mGraspRoleMarker != null) {
            mGraspRoleMarker.setPosition(startLatLng);
        }
    }

    /**
     * 将原始轨迹小人设置到起点
     */
    private void resetOriginRole() {
        if (mOriginLatLngList == null) {
            return;
        }
        LatLng startLatLng = mOriginLatLngList.get(0);
        if (mOriginRoleMarker != null) {
            mOriginRoleMarker.setPosition(startLatLng);
        }
    }

    @SuppressLint("HandlerLeak")
    private Handler handler = new Handler() {

        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case AMAP_LOADED:
                    setupRecord();
                    break;
                default:
                    break;
            }
        }

    };

    public void onBackClick(View view) {
        activity.finish();
        if (mThreadPool != null) {
            mThreadPool.shutdownNow();
        }
    }

    private LatLngBounds getBounds() {
        LatLngBounds.Builder b = LatLngBounds.builder();
        if (mOriginLatLngList == null) {
            return b.build();
        }
        for (int i = 0; i < mOriginLatLngList.size(); i++) {
            b.include(mOriginLatLngList.get(i));
        }
        return b.build();

    }

    private PathRecord getRecord()
    {
        PathRecord record = new PathRecord();

        record.setId(7);
        record.setDistance("10205");
        record.setDuration("1416.04");
        record.setDate("2017-03-16 22:07:46");
        String lines = "31.18336181640625,121.53545383029514,gps,1489673273508,0.11621934,0.0;31.183246256510415,121.53544108072917,gps,1489673276519,0.0,0.0;31.183259819878472,121.53546468098958,gps,1489673279000,0.0,0.0;31.18328342013889,121.53547743055556,gps,1489673282000,0.0,0.0;31.183248426649307,121.53551323784723,gps,1489673285000,3.9539976,0.0;31.183125,121.53565131293402,gps,1489673288000,6.9302373,0.0;31.18307861328125,121.53589382595486,gps,1489673291000,7.0608788,82.53645;31.18314046223958,121.53615234375,gps,1489673294000,7.948186,71.90584;31.183218587239583,121.5364124891493,gps,1489673297000,8.451983,71.61953;31.183323838975696,121.53673800998264,gps,1489673300000,11.03732,71.56381;31.183450249565972,121.53709147135417,gps,1489673303000,12.07365,73.498184;31.18355495876736,121.53745795355903,gps,1489673306000,12.619413,73.003845;31.183650987413195,121.5378502061632,gps,1489673309000,12.598134,74.22032;31.183728841145832,121.538212890625,gps,1489673312000,11.924944,72.62481;31.18383273654514,121.53858072916667,gps,1489673315000,12.81512,72.83356;31.183888346354166,121.53884087456598,gps,1489673317000,12.541726,73.09806;31.183977864583333,121.53920817057292,gps,1489673320000,12.119354,73.31416;31.184037000868056,121.53944146050347,gps,1489673322000,11.777796,73.90704;31.184092881944444,121.53976806640625,gps,1489673325000,10.546169,80.03276;31.18413113064236,121.54006456163195,gps,1489673328000,9.41874,79.99688;31.184139811197916,121.54031656901041,gps,1489673331000,7.270393,79.44651;31.184151204427085,121.54043918185764,gps,1489673334000,2.7986486,73.42632;31.18415500217014,121.54045817057292,gps,1489673337000,0.0,75.100716;31.18415500217014,121.54045817057292,gps,1489673339000,0.0,75.100716;31.18415500217014,121.54045817057292,gps,1489673342000,0.0,75.100716;31.184164496527778,121.54053819444445,gps,1489673345000,1.8366083,93.28449;31.18415825737847,121.54064398871527,gps,1489673348000,3.4352977,98.42937;31.184141438802083,121.54072536892362,gps,1489673350000,4.324067,133.26889;31.18400390625,121.54084852430556,gps,1489673353000,7.4420815,150.64581;31.183760850694444,121.54094211154514,gps,1489673356000,10.801852,166.19554;31.183449164496526,121.54103786892361,gps,1489673359000,12.08939,168.06776;31.183114420572917,121.5411257595486,gps,1489673362000,12.68151,168.0679;31.182752007378472,121.54122314453124,gps,1489673365000,14.01344,168.37022;31.182371961805554,121.54131754557292,gps,1489673368000,14.468206,168.70618;31.18210964626736,121.54138129340278,gps,1489673370000,14.993342,167.9499;31.181705457899305,121.54146674262152,gps,1489673373000,14.983343,168.35938;31.181322157118057,121.54155707465277,gps,1489673376000,14.408404,168.67064;31.181068250868055,121.54160237630208,gps,1489673378000,14.133814,168.64185;31.180709364149305,121.54168728298612,gps,1489673381000,13.408605,168.85829;31.180370279947915,121.54174940321181,gps,1489673384000,12.410693,170.53384;31.18008056640625,121.54180094401042,gps,1489673387000,10.075861,172.02959;31.179945475260418,121.54181477864583,gps,1489673389000,7.837754,172.52855;31.179816080729168,121.54184407552083,gps,1489673392000,4.102751,163.99046;31.17980224609375,121.54184760199652,gps,1489673395000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673398000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673400000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673403000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673406000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673409000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673412000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673414000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673417000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673419000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673422000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673425000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673428000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673431000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673434000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673437000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673440000,0.0,163.39267;31.17980224609375,121.54184760199652,gps,1489673443000,0.0,163.39267;31.17981038411458,121.54191107855902,gps,1489673446000,0.0,163.39267;31.179720594618054,121.54194010416667,gps,1489673449000,4.8557343,167.6091;31.1795068359375,121.5419894748264,gps,1489673452000,8.725228,164.75778;31.179210069444444,121.54209852430556,gps,1489673455000,11.565376,158.92654;31.17886501736111,121.5422474500868,gps,1489673458000,13.896312,160.40431;31.178479817708332,121.54241807725694,gps,1489673461000,15.7400255,162.301;31.17801974826389,121.54254638671875,gps,1489673464000,17.411942,162.916;31.177698025173612,121.54262288411458,gps,1489673466000,18.25983,163.3213;31.177202419704862,121.54281521267362,gps,1489673469000,19.127934,163.08435;31.176702473958333,121.54300103081597,gps,1489673472000,19.226341,162.70139;31.176199544270833,121.5431898328993,gps,1489673475000,19.470364,163.08725;31.175863172743057,121.54331271701389,gps,1489673477000,19.434244,162.9174;31.17535481770833,121.54350206163194,gps,1489673480000,19.827484,162.6652;31.174834526909724,121.54369086371528,gps,1489673483000,20.417656,162.9966;31.174295247395833,121.54388780381944,gps,1489673486000,21.288042,162.90956;31.17374104817708,121.54408175998265,gps,1489673489000,21.193201,163.10002;31.173192274305556,121.54424099392361,gps,1489673492000,20.60397,163.35388;31.172666829427083,121.54442328559028,gps,1489673495000,19.75486,162.39514;31.172357042100696,121.54454155815972,gps,1489673497000,16.456223,160.36858;31.171986490885416,121.54475151909722,gps,1489673500000,14.478838,162.22981;31.171741536458335,121.54482801649306,gps,1489673502000,13.554456,162.54082;31.17140652126736,121.54497233072917,gps,1489673505000,13.450757,162.0704;31.171030002170138,121.5450634765625,gps,1489673508000,15.020605,163.88733;31.170609809027777,121.54519287109375,gps,1489673511000,16.962059,165.83401;31.170142957899305,121.54531521267361,gps,1489673514000,18.157003,168.98735;31.169660373263888,121.54539116753472,gps,1489673517000,17.716722,169.40254;31.169186197916666,121.54548828125,gps,1489673520000,17.958958,170.5723;31.16868896484375,121.54557698567709,gps,1489673523000,19.098124,171.97159;31.168165147569443,121.54566569010417,gps,1489673526000,19.69859,173.7734;31.167616102430557,121.54569444444445,gps,1489673529000,20.447807,176.39268;31.16723578559028,121.54570421006945,gps,1489673531000,21.102621,177.03781;31.166669379340277,121.54573350694444,gps,1489673534000,20.603544,178.52473;31.166112196180556,121.54574055989583,gps,1489673537000,20.48461,179.02788;31.16557590060764,121.54574951171875,gps,1489673540000,19.167715,178.25032;31.16507269965278,121.54575249565973,gps,1489673543000,18.393763,179.771;31.1647412109375,121.54575276692708,gps,1489673545000,18.320246,177.9877;31.164242892795137,121.54577446831597,gps,1489673548000,18.492249,180.27629;31.163740505642362,121.54577528211806,gps,1489673551000,18.613737,179.7122;31.16339789496528,121.54576714409723,gps,1489673553000,19.447527,179.76413;31.16285427517361,121.54578287760417,gps,1489673556000,20.432753,180.00572;31.162296549479166,121.54578016493056,gps,1489673559000,20.572424,179.84941;31.16193332248264,121.54578721788195,gps,1489673561000,19.7003,180.5026;31.161419542100695,121.5457847764757,gps,1489673564000,18.16672,180.04082;31.16110080295139,121.54578314887152,gps,1489673566000,17.13124,180.61455;31.16065863715278,121.54577663845487,gps,1489673569000,15.546399,182.55162;31.16025661892361,121.54575737847222,gps,1489673572000,14.439966,180.66713;31.159876302083333,121.54575737847222,gps,1489673575000,13.711698,179.12752;31.15964599609375,121.54580159505208,gps,1489673577000,12.29536,154.26817;31.159427625868055,121.54603624131944,gps,1489673580000,10.740761,109.8944;31.159388020833333,121.54625596788195,gps,1489673582000,10.775567,88.04007;31.15943874782986,121.54652723524306,gps,1489673584000,13.365249,71.51553;31.159568684895834,121.54691134982639,gps,1489673587000,13.861509,67.76847;31.159654134114582,121.54718098958334,gps,1489673589000,14.497159,68.15644;31.15979519314236,121.54761908637153,gps,1489673592000,15.298608,70.806015;31.15991129557292,121.54809760199653,gps,1489673595000,15.610908,70.74006;31.160021158854168,121.54859185112848,gps,1489673598000,15.823284,72.10337;31.160133463541666,121.5490833875868,gps,1489673601000,15.7216,73.21769;31.160218641493056,121.54940348307292,gps,1489673603000,15.623041,73.652565;31.160361870659724,121.54987928602431,gps,1489673606000,16.415102,73.16074;31.160457356770834,121.55021565755209,gps,1489673608000,17.21292,69.98726;31.160634494357637,121.550732421875,gps,1489673611000,18.08877,70.43704;31.160791286892362,121.55126844618056,gps,1489673614000,17.57306,72.12567;31.160884602864584,121.55162679036458,gps,1489673616000,17.729881,74.14185;31.161007486979166,121.55215576171875,gps,1489673619000,17.23451,75.020386;31.1611279296875,121.55268853081597,gps,1489673622000,17.583065,75.529076;31.161244845920137,121.55323594835069,gps,1489673625000,18.338182,75.787285;31.161358506944445,121.55380940755208,gps,1489673628000,19.13667,76.80835;31.161481391059027,121.55439805772569,gps,1489673631000,19.458841,77.42614;31.161596950954863,121.55499918619792,gps,1489673634000,19.625454,77.82182;31.161703287760417,121.55560736762153,gps,1489673637000,19.29121,78.445175;31.16176513671875,121.55600613064236,gps,1489673639000,19.390789,78.538734;31.161868489583334,121.55659939236111,gps,1489673642000,18.981766,81.18476;31.161929524739584,121.55718153211805,gps,1489673645000,18.43148,83.75608;31.16198703342014,121.55774658203126,gps,1489673648000,17.989025,83.70463;31.162018229166666,121.55811903211806,gps,1489673650000,17.63917,82.79778;31.162076822916667,121.55865478515625,gps,1489673653000,16.88504,81.63368;31.16212646484375,121.55918077256945,gps,1489673656000,17.093306,81.32682;31.162176106770833,121.5597189670139,gps,1489673659000,17.45447,82.162125;31.16226345486111,121.56026557074652,gps,1489673662000,17.868925,83.064;31.162357584635416,121.5608175998264,gps,1489673665000,18.290386,82.77744;31.162432725694444,121.56118706597222,gps,1489673667000,17.866367,82.853714;31.162481825086804,121.56172417534722,gps,1489673670000,16.662352,86.28236;31.16249267578125,121.5622300889757,gps,1489673673000,15.484766,86.43274;31.16247097439236,121.5626687282986,gps,1489673676000,12.251479,88.21266;31.16245849609375,121.56302408854167,gps,1489673679000,10.162491,100.927444;31.162393934461807,121.56320882161458,gps,1489673681000,9.222155,138.34888;31.162184244791668,121.56334201388889,gps,1489673684000,9.973092,164.20862;31.16188720703125,121.56337320963542,gps,1489673687000,12.741211,172.19595;31.161521809895834,121.56344780815972,gps,1489673690000,15.072926,173.07147;31.161114366319445,121.56351535373264,gps,1489673693000,15.508762,172.81189;31.160692816840278,121.56356987847222,gps,1489673696000,15.954752,173.84526;31.160259602864585,121.56358425564235,gps,1489673699000,15.651067,174.45769;31.159983452690973,121.56362277560764,gps,1489673701000,15.014462,173.36009;31.159597981770833,121.56369791666667,gps,1489673704000,14.324163,171.03784;31.159216037326388,121.56375461154514,gps,1489673707000,14.866153,172.9777;31.15879340277778,121.56380452473958,gps,1489673710000,16.271637,173.13968;31.158326551649306,121.56383409288195,gps,1489673713000,16.82391,174.83882;31.157899576822917,121.56393337673612,gps,1489673716000,14.830168,172.02312;31.157530110677083,121.56392116970486,gps,1489673719000,15.55826,173.48305;31.157108832465276,121.5639453125,gps,1489673722000,15.429356,174.48407;31.15683865017361,121.563984375,gps,1489673724000,15.597934,173.00668;31.15640625,121.56408827039931,gps,1489673727000,16.01793,170.56102;31.15597927517361,121.56418728298611,gps,1489673730000,15.463528,170.52255;31.155567220052085,121.56422743055556,gps,1489673733000,14.447801,166.87022;31.155169270833333,121.56433648003473,gps,1489673736000,14.125525,164.86896;31.15477322048611,121.56448784722222,gps,1489673739000,14.44018,164.48749;31.154395616319444,121.56465142144097,gps,1489673742000,15.005704,162.40842;31.154055718315973,121.56479329427083,gps,1489673745000,11.746063,163.60999;31.153849012586807,121.56484293619792,gps,1489673747000,11.247009,160.40265;31.153642849392362,121.56492241753472,gps,1489673749000,12.38661,162.74765;31.15330593532986,121.56502631293402,gps,1489673752000,13.886615,163.39719;31.153066134982637,121.56510850694444,gps,1489673754000,14.252399,164.17691;31.152708604600694,121.56520697699652,gps,1489673757000,12.69336,164.57494;31.152368977864583,121.56530897352431,gps,1489673760000,12.601646,164.87938;31.152150065104166,121.56539143880208,gps,1489673762000,12.682748,164.34708;31.151818033854166,121.56551106770833,gps,1489673765000,12.077071,164.72212;31.151529134114583,121.56561442057291,gps,1489673768000,11.362697,164.0616;31.151201171875,121.56571044921876,gps,1489673771000,13.462769,164.55496;31.150822211371526,121.56579725477431,gps,1489673774000,14.533684,164.63295;31.150455457899305,121.56594401041667,gps,1489673777000,14.477998,164.74846;31.150199110243054,121.56602620442709,gps,1489673779000,14.907684,164.09213;31.149806043836804,121.56615804036458,gps,1489673782000,14.875869,163.03777;31.149451226128473,121.56626871744791,gps,1489673785000,11.153962,167.40569;31.149247775607638,121.56633951822917,gps,1489673788000,5.9571667,166.44893;31.149097222222224,121.56636691623264,gps,1489673791000,4.3438396,164.02808;31.149022081163196,121.56640407986112,gps,1489673794000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673797000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673799000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673802000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673805000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673808000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673811000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673814000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673817000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673820000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673823000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673825000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673828000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673831000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673834000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673837000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673839000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673841000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673844000,0.0,165.05096;31.149022081163196,121.56640407986112,gps,1489673847000,0.0,165.05096;31.149015299479167,121.56641872829861,gps,1489673850000,0.93225694,165.75981;31.148961859809027,121.56644097222222,gps,1489673852000,3.2491632,164.96516;31.148816460503472,121.56648546006944,gps,1489673855000,5.8249874,163.65735;31.148607855902778,121.56655680338541,gps,1489673858000,7.9296484,165.17386;31.14845241970486,121.56660454644097,gps,1489673860000,9.101435,164.58664;31.14816162109375,121.56669731987847,gps,1489673863000,11.31273,166.1916;31.147849934895834,121.56679280598958,gps,1489673866000,12.309241,163.21257;31.147620713975694,121.56685546875,gps,1489673868000,12.709089,163.4657;31.147282172309026,121.56697970920139,gps,1489673871000,13.24492,165.06166;31.14692355685764,121.56707790798612,gps,1489673874000,13.614867,166.52301;31.14657470703125,121.5671888563368,gps,1489673877000,13.406958,168.32121;31.14623969184028,121.56723659939236,gps,1489673880000,12.127509,171.71167;31.145973307291666,121.56725694444444,gps,1489673883000,9.419582,175.1628;31.14575249565972,121.56727837456597,gps,1489673886000,7.970578,174.70578;31.145556640625,121.56731472439236,gps,1489673889000,7.1399484,174.60703;31.14545166015625,121.5673304578993,gps,1489673891000,5.744365,174.98273;31.145334201388888,121.56734293619792,gps,1489673894000,4.0249515,175.47154;31.145259331597224,121.56734592013889,gps,1489673897000,2.5476763,176.12654;31.145244140625,121.56734592013889,gps,1489673900000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673903000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673906000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673908000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673911000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673914000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673916000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673919000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673922000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673925000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673927000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673930000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673933000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673936000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673939000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673941000,0.0,176.0849;31.145244140625,121.56734592013889,gps,1489673944000,0.0,176.0849;31.145206434461805,121.56735378689235,gps,1489673947000,1.958033,176.69228;31.14507975260417,121.56735894097223,gps,1489673950000,4.1471796,178.05083;31.14496826171875,121.56736409505208,gps,1489673952000,6.5883884,176.97145;31.144732801649305,121.56737223307292,gps,1489673955000,8.4533,180.28117;31.144480794270834,121.56737630208333,gps,1489673958000,9.532243,178.1924;31.14419894748264,121.56739935980903,gps,1489673961000,10.706005,177.60315;31.143841145833335,121.56742458767361,gps,1489673964000,12.6149235,178.399;31.143583984375,121.56742784288194,gps,1489673966000,13.354515,180.34225;31.143197970920138,121.5674205186632,gps,1489673969000,14.131765,180.5258;31.1428076171875,121.56741455078125,gps,1489673972000,14.719397,182.7966;31.142400987413193,121.56740207248264,gps,1489673975000,15.20374,179.72545;31.14199951171875,121.56741427951388,gps,1489673978000,14.4407,179.43715;31.1416455078125,121.567412109375,gps,1489673981000,12.775054,179.8609;31.141339789496527,121.56740668402777,gps,1489673984000,11.153406,179.89394;31.14111246744792,121.56740505642361,gps,1489673987000,8.005239,179.14055;31.14102511935764,121.5673974609375,gps,1489673990000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489673993000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489673995000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489673998000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674001000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674004000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674006000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674009000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674012000,0.0,180.40057;31.14102511935764,121.5673974609375,gps,1489674014000,0.0,180.40057;31.140989040798612,121.56735921223958,gps,1489674017000,3.3436239,184.05898;31.14087700737847,121.56733940972222,gps,1489674019000,5.9461155,187.29158;31.140631239149304,121.56729953342014,gps,1489674022000,9.460731,184.44952;31.1403173828125,121.56728678385417,gps,1489674025000,11.577559,178.68153;31.13998101128472,121.56726996527777,gps,1489674028000,12.481616,180.39774;31.139644639756945,121.56725504557292,gps,1489674031000,12.394157,179.18456;31.139337836371528,121.56725667317708,gps,1489674034000,11.369654,173.11499;31.139034016927084,121.56732476128472,gps,1489674037000,11.67943,182.3537;31.138804253472223,121.56735568576389,gps,1489674039000,12.497495,187.84103;31.138567165798612,121.56737223307292,gps,1489674041000,12.607507,196.53432;31.13825656467014,121.56727077907986,gps,1489674044000,11.707258,198.64589;31.137962782118056,121.56723659939236,gps,1489674047000,11.074696,189.33253;31.137651095920138,121.56721842447917,gps,1489674050000,12.077591,181.84714;31.137421875,121.5672580295139,gps,1489674052000,11.84446,179.6189;31.1371484375,121.56727593315972,gps,1489674055000,10.263014,178.10251;31.136830783420137,121.56724527994791,gps,1489674058000,12.220418,179.74948;31.13645290798611,121.56724555121528,gps,1489674061000,14.149473,178.6233;31.136059027777776,121.56726209852431,gps,1489674064000,14.489132,179.57614;31.135799696180555,121.56724853515625,gps,1489674066000,14.04938,180.56303;31.135445421006946,121.56725314670139,gps,1489674069000,12.624156,185.39322;31.13521918402778,121.56709418402778,gps,1489674072000,10.262785,231.72725;31.135057237413193,121.56686848958333,gps,1489674075000,8.925434,197.49619;31.13490234375,121.56683078342014,gps,1489674077000,8.629889,178.76138;31.134725206163193,121.56682427300348,gps,1489674080000,5.1108828,184.59326;31.134697265625,121.56682291666667,gps,1489674083000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674085000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674088000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674091000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674094000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674097000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674099000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674102000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674105000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674108000,0.0,184.56696;31.134697265625,121.56682291666667,gps,1489674111000,0.0,184.56696;31.13464382595486,121.56683837890625,gps,1489674114000,0.0,184.56696;31.134637858072917,121.56683620876736,gps,1489674116000,0.7550615,188.04248;31.1345654296875,121.5668275282118,gps,1489674119000,2.7731342,175.0002;31.13452880859375,121.56683512369791,gps,1489674122000,1.9552169,166.31155;31.134478895399305,121.56686442057291,gps,1489674124000,3.3146374,149.71921;31.134402126736113,121.56692192925347,gps,1489674126000,4.573851,149.96837;31.134254286024305,121.56698649088541,gps,1489674129000,6.723781,173.51329;31.133996039496527,121.56698866102431,gps,1489674132000,9.85604,181.9129;31.13364040798611,121.56694498697917,gps,1489674135000,12.336056,184.83122;31.13325981987847,121.56689371744791,gps,1489674138000,14.347464,185.76294;31.132832845052082,121.56683159722222,gps,1489674141000,16.091862,185.18622;31.132381727430555,121.56678114149305,gps,1489674144000,16.690758,186.04576;31.13190890842014,121.56671522352431,gps,1489674147000,17.860258,185.82619;31.13142306857639,121.56665364583333,gps,1489674150000,18.18811,185.97096;31.13093505859375,121.56661865234375,gps,1489674153000,17.476444,186.38017;31.13047878689236,121.56657335069444,gps,1489674156000,16.396317,183.44353;31.13009033203125,121.56664252387152,gps,1489674159000,13.441532,155.72168;31.129773763020832,121.566787109375,gps,1489674162000,12.4711895,176.11464;31.129541286892362,121.56676486545139,gps,1489674164000,13.837459,187.37935;31.12914360894097,121.56671251085069,gps,1489674167000,15.123565,185.64651;31.12887261284722,121.56668402777778,gps,1489674169000,15.210726,185.10083;31.12847113715278,121.56661376953124,gps,1489674172000,14.865198,191.87637;31.128088921440973,121.56648681640625,gps,1489674175000,14.905522,193.0847;31.12765407986111,121.56641276041667,gps,1489674178000,16.904778,182.74959;31.127177734375,121.56638346354167,gps,1489674181000,18.32377,183.46458;31.126703559027778,121.56636447482639,gps,1489674184000,16.20926,182.203;31.126315104166668,121.56633978949652,gps,1489674187000,13.434847,182.50636;31.125960286458334,121.56634575737847,gps,1489674190000,13.096484,179.17317;31.125713975694445,121.5663308376736,gps,1489674192000,14.038168,179.9486;31.12531494140625,121.56631103515625,gps,1489674195000,15.241977,178.08119;31.12492431640625,121.56635199652777,gps,1489674198000,13.463505,176.18323;31.12460720486111,121.56643012152777,gps,1489674201000,12.004539,177.6117;31.12426513671875,121.56645779079861,gps,1489674204000,13.894973,176.59454;31.123875596788196,121.56648654513889,gps,1489674207000,15.082722,174.90091;31.123594563802083,121.56648600260417,gps,1489674209000,15.879632,175.06833;31.123156195746528,121.56649441189236,gps,1489674212000,15.699949,174.87285;31.12274875217014,121.56652180989583,gps,1489674215000,14.135718,175.00607;31.12243570963542,121.56658989800347,gps,1489674218000,8.918121,174.06277;31.12231418185764,121.56660834418403,gps,1489674221000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674223000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674226000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674229000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674232000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674234000,0.0,176.47514;31.12231418185764,121.56660834418403,gps,1489674237000,0.0,176.47514;31.122252061631944,121.56661214192708,gps,1489674240000,0.0,176.47514;31.12219699435764,121.56659288194444,gps,1489674243000,0.0,176.47514;31.122155219184027,121.5666392686632,gps,1489674245000,0.0,176.47514;31.122155219184027,121.5666392686632,gps,1489674248000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674250000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674253000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674256000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674259000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674262000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674265000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674267000,0.0,176.47514;31.122115885416665,121.56666639539931,gps,1489674270000,0.0,176.47514;31.122066786024305,121.5666615125868,gps,1489674273000,0.0,176.47514;31.12206515842014,121.56672200520833,gps,1489674276000,0.0,176.47514;31.12206515842014,121.56672200520833,gps,1489674278000,0.0,176.47514;31.122006022135416,121.56674831814236,gps,1489674281000,3.6453085,118.128426;31.121981608072918,121.56688693576389,gps,1489674284000,4.950181,85.086296;31.1219970703125,121.56707682291666,gps,1489674287000,7.2757854,84.05144;31.12207763671875,121.56733723958334,gps,1489674290000,8.653791,87.69372;31.122080078125,121.56755099826388,gps,1489674292000,10.30149,89.07286;31.12206271701389,121.56789306640626,gps,1489674295000,10.067236,88.219505;31.12206515842014,121.56822075737847,gps,1489674298000,9.418371,87.61413;31.122068413628472,121.56853407118055,gps,1489674301000,9.74462,88.2352;31.122071668836806,121.56883436414931,gps,1489674304000,8.589253,86.72915;31.122083604600693,121.5690771484375,gps,1489674307000,6.9597836,82.88808;31.122154947916666,121.56915907118055,gps,1489674310000,4.745763,11.582983;31.12225423177083,121.56917154947917,gps,1489674313000,3.748011,0.13613988;31.122332628038194,121.56917046440972,gps,1489674315000,3.752976,11.73619;31.12245062934028,121.5692019314236,gps,1489674318000,5.0570126,14.616953;31.122635091145835,121.56921223958334,gps,1489674321000,7.253262,358.80548;31.122846137152777,121.56919840494791,gps,1489674324000,6.8761106,358.1389;31.12302788628472,121.56918023003472,gps,1489674327000,6.2481513,357.62634;31.123179796006944,121.5691587999132,gps,1489674330000,5.4048557,355.77692;31.12328857421875,121.56914469401042,gps,1489674333000,4.36082,354.95474;31.12338704427083,121.56910780164931,gps,1489674336000,3.760678,323.1043;31.123441569010417,121.5690562608507,gps,1489674338000,3.3881602,342.7989;31.123531358506945,121.56904188368055,gps,1489674341000,3.3631036,358.45877;31.123620876736112,121.56904242621528,gps,1489674344000,2.7110505,4.200269;31.12368896484375,121.56903401692708,gps,1489674347000,2.1359162,357.2185;31.1237353515625,121.56902533637152,gps,1489674349000,2.4142356,355.0026;31.12383572048611,121.56901258680556,gps,1489674352000,2.8277655,353.40967;31.123916015625,121.56900444878472,gps,1489674355000,1.9517372,358.39835;31.123961317274304,121.56899820963541,gps,1489674358000,0.98906106,355.4459;31.12403835720486,121.56898546006944,gps,1489674361000,1.7810739,355.1408;31.12409939236111,121.56897026909722,gps,1489674364000,1.2388446,354.06592;31.12409939236111,121.56897026909722,gps,1489674367000,0.15391059,355.44537;31.12409939236111,121.56897026909722,gps,1489674370000,0.0,355.44537;31.12409939236111,121.56897026909722,gps,1489674372000,0.0,355.44537;31.124147677951388,121.56895670572916,gps,1489674375000,0.0,36.131668;31.12415798611111,121.56897026909722,gps,1489674377000,0.4117734,70.246994;31.12417941623264,121.56899875217015,gps,1489674380000,0.8273099,83.58087;31.124193250868057,121.56904866536458,gps,1489674383000,0.7799201,87.4211;31.124211968315972,121.56905029296875,gps,1489674386000,0.7348883,67.35082;31.124211968315972,121.56905029296875,gps,1489674389000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674392000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674395000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674397000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674400000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674402000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674405000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674408000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674411000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674414000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674417000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674419000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674422000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674425000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674428000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674431000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674434000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674437000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674440000,0.0,66.70282;31.124211968315972,121.56905029296875,gps,1489674443000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674446000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674448000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674451000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674454000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674457000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674459000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674462000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674464000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674467000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674470000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674473000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674476000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674479000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674482000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674485000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674487000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674490000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674493000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674496000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674499000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674502000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674505000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674508000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674511000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674513000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674515000,0.0,66.70282;31.124264865451387,121.56904758029513,gps,1489674518000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674521000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674524000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674526000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674529000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674532000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674534000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674537000,0.0,66.70282;31.124277072482638,121.56899603949653,gps,1489674540000,0.0,66.70282;31.124280870225693,121.56901123046875,gps,1489674543000,0.015290587,66.70282;31.124269748263888,121.56903428819444,gps,1489674545000,0.16170926,66.70282;31.124261881510417,121.56903401692708,gps,1489674548000,0.11888745,66.70282;31.124258083767362,121.56903591579861,gps,1489674551000,0.10304932,66.70282;31.12427218967014,121.56905219184027,gps,1489674554000,0.24565437,200.32623;31.12429470486111,121.56904378255209,gps,1489674556000,0.043352842,200.32623;31.124290907118056,121.56904947916667,gps,1489674559000,0.002608386,200.32623;31.124290093315974,121.56904839409722,gps,1489674562000,0.015870214,200.32623;31.124292263454862,121.56904622395834,gps,1489674565000,0.14889975,200.32623;31.124278428819444,121.56897759331598,gps,1489674568000,0.4153564,158.85863;31.124278157552084,121.5689724392361,gps,1489674570000,0.43767157,157.84167;31.12428683810764,121.56896511501736,gps,1489674573000,0.27129206,157.84167;31.12430148654514,121.56898600260416,gps,1489674576000,0.18090731,157.84167;31.124293077256944,121.5689879014757,gps,1489674578000,0.14614834,157.84167;31.124300130208333,121.56897162543403,gps,1489674581000,0.015379699,157.84167;31.124299858940972,121.56898139105903,gps,1489674583000,0.5281585,88.34852;31.1242919921875,121.56901421440972,gps,1489674586000,0.79241985,117.7169;31.12428982204861,121.5690199110243,gps,1489674588000,0.4236165,119.589645;31.1242919921875,121.56902750651042,gps,1489674591000,0.20590822,119.589645;31.124278428819444,121.56903076171875,gps,1489674594000,0.422683,179.3037;31.12423312717014,121.56904215494792,gps,1489674597000,1.0264021,158.67873;31.12420708550347,121.56906494140625,gps,1489674599000,0.0,0.0;31.124166937934028,121.5690771484375,gps,1489674605000,0.0,0.0;31.124183213975694,121.56904866536458,gps,1489674618000,0.0,0.0;31.12422580295139,121.56903021918403,gps,1489674621000,0.0034906766,150.3876;31.124276529947917,121.56897054036459,gps,1489674624000,0.30428836,156.30551;31.124303385416667,121.56895345052084,gps,1489674631000,0.023071075,154.5478;31.124280327690972,121.56899007161458,gps,1489674634000,0.09998512,336.9998;31.12423828125,121.56906765407986,gps,1489674643000,0.0,0.0;31.124209255642363,121.56908935546875,gps,1489674646000,1.0359282,165.93222";
        record.setPathline(Util.parseLocations(lines));
        String start = "31.18336181640625,121.53545383029514,gps,1489673273508,0.11621934,0.0";
        record.setStartpoint(Util.parseLocation(start));
        String end = "31.124209255642363,121.56908935546875,gps,1489674646000,1.0359282,165.93222";
        record.setEndpoint(Util.parseLocation(end));

        return record;
    }
    /**
     * 轨迹数据初始化
     *
     */
    private void setupRecord() {
        // 轨迹纠偏初始化
        LBSTraceClient mTraceClient = new LBSTraceClient( activity.getApplicationContext());
        // DbAdapter dbhelper = new DbAdapter(activity.getApplicationContext());
        // dbhelper.open();
        // PathRecord mRecord = dbhelper.queryRecordById(mRecordItemId);
        // dbhelper.close();
        PathRecord mRecord = getRecord();
        if (mRecord != null) {
            List<AMapLocation> recordList = mRecord.getPathline();
            AMapLocation startLoc = mRecord.getStartpoint();
            AMapLocation endLoc = mRecord.getEndpoint();
            if (recordList == null || startLoc == null || endLoc == null) {
                return;
            }
            LatLng startLatLng = new LatLng(startLoc.getLatitude(),
                    startLoc.getLongitude());
            LatLng endLatLng = new LatLng(endLoc.getLatitude(),
                    endLoc.getLongitude());
            mOriginLatLngList = Util.parseLatLngList(recordList);
            addOriginTrace(startLatLng, endLatLng, mOriginLatLngList);

            List<TraceLocation> mGraspTraceLocationList = Util
                    .parseTraceLocationList(recordList);
            // 调用轨迹纠偏，将mGraspTraceLocationList进行轨迹纠偏处理
            mTraceClient.queryProcessedTrace(1, mGraspTraceLocationList,
                    LBSTraceClient.TYPE_AMAP, this);
        } else {
            Log.i("MY", "mRecord == null");
        }

    }

    /**
     * 地图上添加原始轨迹线路及起终点、轨迹动画小人
     *
     */
    private void addOriginTrace(LatLng startPoint, LatLng endPoint, List<LatLng> originList) {
        mOriginPolyline = mAMap.addPolyline(new PolylineOptions().color(
                Color.BLUE).addAll(originList));
        mOriginStartMarker = mAMap.addMarker(new MarkerOptions().position(
                startPoint).icon(
                BitmapDescriptorFactory.fromResource(R.drawable.start)));
        mOriginEndMarker = mAMap.addMarker(new MarkerOptions().position(
                endPoint).icon(
                BitmapDescriptorFactory.fromResource(R.drawable.end)));

        try {
            mAMap.moveCamera(CameraUpdateFactory.newLatLngBounds(getBounds(),
                    50));
        } catch (Exception e) {
            e.printStackTrace();
        }

        mOriginRoleMarker = mAMap.addMarker(new MarkerOptions().position(
                startPoint).icon(
                BitmapDescriptorFactory.fromBitmap(BitmapFactory
                        .decodeResource(getResources(), R.drawable.walk))));
    }

    /**
     * 设置是否显示原始轨迹
     *
     */
    private void setOriginEnable(boolean enable) {
        if (mOriginPolyline == null || mOriginStartMarker == null
                || mOriginEndMarker == null || mOriginRoleMarker == null) {
            return;
        }
        if (enable) {
            mOriginPolyline.setVisible(true);
            mOriginStartMarker.setVisible(true);
            mOriginEndMarker.setVisible(true);
            mOriginRoleMarker.setVisible(true);
        } else {
            mOriginPolyline.setVisible(false);
            mOriginStartMarker.setVisible(false);
            mOriginEndMarker.setVisible(false);
            mOriginRoleMarker.setVisible(false);
        }
    }

    /**
     * 地图上添加纠偏后轨迹线路及起终点、轨迹动画小人
     *
     */
    private void addGraspTrace(List<LatLng> graspList, boolean mGraspChecked) {
        if (graspList == null || graspList.size() < 2) {
            return;
        }
        LatLng startPoint = graspList.get(0);
        LatLng endPoint = graspList.get(graspList.size() - 1);
        mGraspPolyline = mAMap.addPolyline(new PolylineOptions()
                .setCustomTexture(
                        BitmapDescriptorFactory
                                .fromResource(R.drawable.grasp_trace_line))
                .width(40).addAll(graspList));
        mGraspStartMarker = mAMap.addMarker(new MarkerOptions().position(
                startPoint).icon(
                BitmapDescriptorFactory.fromResource(R.drawable.start)));
        mGraspEndMarker = mAMap.addMarker(new MarkerOptions()
                .position(endPoint).icon(
                        BitmapDescriptorFactory.fromResource(R.drawable.end)));
        mGraspRoleMarker = mAMap.addMarker(new MarkerOptions().position(
                startPoint).icon(
                BitmapDescriptorFactory.fromBitmap(BitmapFactory
                        .decodeResource(getResources(), R.drawable.walk))));
        if (!mGraspChecked) {
            mGraspPolyline.setVisible(false);
            mGraspStartMarker.setVisible(false);
            mGraspEndMarker.setVisible(false);
            mGraspRoleMarker.setVisible(false);
        }
    }

    /**
     * 设置是否显示纠偏后轨迹
     *
     */
    private void setGraspEnable(boolean enable) {

        if (mGraspPolyline == null || mGraspStartMarker == null
                || mGraspEndMarker == null || mGraspRoleMarker == null) {
            return;
        }
        if (enable) {
            mGraspPolyline.setVisible(true);
            mGraspStartMarker.setVisible(true);
            mGraspEndMarker.setVisible(true);
            mGraspRoleMarker.setVisible(true);
        } else {
            mGraspPolyline.setVisible(false);
            mGraspStartMarker.setVisible(false);
            mGraspEndMarker.setVisible(false);
            mGraspRoleMarker.setVisible(false);
        }
    }

    // 添加多边形的边界点marker
    private void addPolygonMarker(LatLng latlng) {
        markerOption.position(latlng);
        Marker marker = mAMap.addMarker(markerOption);
        markerList.add(marker);
    }

    private void removeMarkers() {
        if (null != markerList && markerList.size() > 0) {
            for (Marker marker : markerList) {
                marker.remove();
            }
            markerList.clear();
        }
    }

    private void resetView_polygon() {
        //tvGuide.setBackgroundColor(getResources().getColor(R.color.red));
        //tvGuide.setText("请点击地图选择围栏的边界点,至少3个点");
        //tvGuide.setVisibility(View.VISIBLE);
        //tvGuide.setVisibility(View.VISIBLE);
        polygonPoints = new ArrayList<LatLng>();
        btAddFence.setEnabled(false);
    }

    /**
     * 添加多边形围栏
     */
    private void addPolygonFence() {
        //cg String customId = etCustomId.getText().toString();
        String customId = "cgtest";
        if (null == polygonPoints || polygonPoints.size() < 3) {
            Toast.makeText( getActivity().getApplicationContext(), "参数不全", Toast.LENGTH_SHORT)
                    .show();
            btAddFence.setEnabled(true);
            return;
        }
        List<DPoint> pointList = new ArrayList<DPoint>();
        for (LatLng latLng : polygonPoints) {
            pointList.add(new DPoint(latLng.latitude, latLng.longitude));
        }
        fenceClient.addGeoFence(pointList, customId);
    }

    @Override
    public void onMapClick(LatLng latLng) {
        if (null == polygonPoints) {
            polygonPoints = new ArrayList<LatLng>();
        }
        polygonPoints.add(latLng);
        addPolygonMarker(latLng);
        // tvGuide.setBackgroundColor(getResources().getColor(R.color.gary));
        // tvGuide.setText("已选择" + polygonPoints.size() + "个点");
        if (polygonPoints.size() >= 3) {
            btAddFence.setEnabled(true);
        }
    }

    List<GeoFence> fenceList = new ArrayList<GeoFence>();
    @Override
    public void onGeoFenceCreateFinished(final List<GeoFence> geoFenceList,
                                         int errorCode, String customId) {
        Message msg = Message.obtain();
        if (errorCode == GeoFence.ADDGEOFENCE_SUCCESS) {
            fenceList = geoFenceList;
            msg.obj = customId;
            msg.what = 0;
        } else {
            msg.arg1 = errorCode;
            msg.what = 1;
        }
        handler2.sendMessage(msg);
    }


    private void drawFence(GeoFence fence) {
        switch (fence.getType()) {
            case GeoFence.TYPE_ROUND :
            case GeoFence.TYPE_AMAPPOI :
                drawCircle(fence);
                break;
            case GeoFence.TYPE_POLYGON :
            case GeoFence.TYPE_DISTRICT :
                drawPolygon(fence);
                break;
            default :
                break;
        }

        // 设置所有maker显示在当前可视区域地图中
        LatLngBounds bounds = boundsBuilder.build();
        mAMap.moveCamera(CameraUpdateFactory.newLatLngBounds(bounds, 150));
        polygonPoints.clear();
        removeMarkers();
    }


    private void drawCircle(GeoFence fence) {
        LatLng center = new LatLng(fence.getCenter().getLatitude(),
                fence.getCenter().getLongitude());
        // 绘制一个圆形
        mAMap.addCircle(new CircleOptions().center(center)
                .radius(fence.getRadius()).strokeColor(Const.STROKE_COLOR)
                .fillColor(Const.FILL_COLOR).strokeWidth(Const.STROKE_WIDTH));
        boundsBuilder.include(center);
    }

    private void drawPolygon(GeoFence fence) {
        final List<List<DPoint>> pointList = fence.getPointList();
        if (null == pointList || pointList.isEmpty()) {
            return;
        }
        for (List<DPoint> subList : pointList) {
            List<LatLng> lst = new ArrayList<LatLng>();

            PolygonOptions polygonOption = new PolygonOptions();
            for (DPoint point : subList) {
                lst.add(new LatLng(point.getLatitude(), point.getLongitude()));
                boundsBuilder.include(
                        new LatLng(point.getLatitude(), point.getLongitude()));
            }
            polygonOption.addAll(lst);

            polygonOption.strokeColor(Const.STROKE_COLOR)
                    .fillColor(Const.FILL_COLOR).strokeWidth(Const.STROKE_WIDTH);
            mAMap.addPolygon(polygonOption);
        }
    }


    Object lock = new Object();
    void drawFence2Map() {
        new Thread() {
            @Override
            public void run() {
                try {
                    synchronized (lock) {
                        if (null == fenceList || fenceList.isEmpty()) {
                            return;
                        }
                        for (GeoFence fence : fenceList) {
                            if (fenceMap.containsKey(fence.getFenceId())) {
                                continue;
                            }
                            drawFence(fence);
                            fenceMap.put(fence.getFenceId(), fence);
                        }
                    }
                } catch (Throwable e) {

                }
            }
        }.start();
    }


    Handler handler2 = new Handler() {
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case 0 :
                    StringBuffer sb = new StringBuffer();
                    sb.append("添加围栏成功");
                    String customId = (String)msg.obj;
                    // if(!TextUtils.isEmpty(customId)){
                    //    sb.append("customId: ").append(customId);
                    // }
                    Toast.makeText(getActivity().getApplicationContext(), sb.toString(),
                            Toast.LENGTH_SHORT).show();
                    drawFence2Map();
                    break;
                case 1 :
                    int errorCode = msg.arg1;
                    Toast.makeText(getActivity().getApplicationContext(),
                            "添加围栏失败 " + errorCode, Toast.LENGTH_SHORT).show();
                    break;
                case 2 :
                    String statusStr = (String) msg.obj;
                    // tvResult.setVisibility(View.VISIBLE);
                    // tvResult.append(statusStr + "\n");
                    break;
                default :
                    break;
            }
        }
    };

    /**
     * 接收触发围栏后的广播,当添加围栏成功之后，会立即对所有围栏状态进行一次侦测，如果当前状态与用户设置的触发行为相符将会立即触发一次围栏广播；
     * 只有当触发围栏之后才会收到广播,对于同一触发行为只会发送一次广播不会重复发送，除非位置和围栏的关系再次发生了改变。
     */
    private BroadcastReceiver mGeoFenceReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            // 接收广播
            if (intent.getAction().equals(GEOFENCE_BROADCAST_ACTION)) {
                Bundle bundle = intent.getExtras();
                String customId = bundle.getString(GeoFence.BUNDLE_KEY_CUSTOMID);
                String fenceId = bundle.getString(GeoFence.BUNDLE_KEY_FENCEID);
                //status标识的是当前的围栏状态，不是围栏行为
                int status = bundle.getInt(GeoFence.BUNDLE_KEY_FENCESTATUS);
                StringBuffer sb = new StringBuffer();
                switch (status) {
                    case GeoFence.STATUS_LOCFAIL :
                        sb.append("定位失败");
                        break;
                    case GeoFence.STATUS_IN :
                        sb.append("进入围栏 ");
                        break;
                    case GeoFence.STATUS_OUT :
                        sb.append("离开围栏 ");
                        break;
                    case GeoFence.STATUS_STAYED :
                        sb.append("停留在围栏内 ");
                        break;
                    default :
                        break;
                }
                if(status != GeoFence.STATUS_LOCFAIL){
                    if(!TextUtils.isEmpty(customId)){
                        sb.append(" customId: " + customId);
                    }
                    sb.append(" fenceId: " + fenceId);
                }
                String str = sb.toString();
                Message msg = Message.obtain();
                msg.obj = str;
                msg.what = 2;
                handler2.sendMessage(msg);
            }
        }
    };

}

